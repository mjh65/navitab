/*
 *  Navitab - Navigation tablet for VR flight simulation
 *  Copyright (C) 2024 Michael Hasling
 *  Significantly derived from Avitab
 *  Copyright (C) 2018-2024 Folke Will <folko@solhost.org>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include <stdint.h>
#include <vector>

namespace navitab {

// ImageRectangle objects contain RGBA pixel data that has been generated by
// some part of the Navitab core, and is then given to the window interface
// to be rendered. Typically they are used in pairs and swapped so that there
// is no contention between generating and rendering on screen.

class ImageRectangle
{
public:
    ImageRectangle(int w, int h);
    ~ImageRectangle() = default;

    void Reset() { isTexRegistered = false; }

    void Clear(uint32_t px);
    int Width() const { return width; }
    int Height() const { return height; }

    uint32_t* Row(int r) { return &data[r * width]; }

    bool NeedsRegistration() { auto nr = !isTexRegistered; isTexRegistered = true; return nr; }

private:
    int width;
    int height;
    std::vector<uint32_t> data;
    bool isTexRegistered;
};

} // namespace navitab
